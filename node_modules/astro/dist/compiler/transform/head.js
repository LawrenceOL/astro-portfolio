import {EndOfHead} from "./util/end-of-head.js";
function head_default(opts) {
  let hasComponents = false;
  let isHmrEnabled = typeof opts.compileOptions.hmrPort !== "undefined" && opts.compileOptions.mode === "development";
  const eoh = new EndOfHead();
  return {
    visitors: {
      html: {
        Fragment: {
          enter(node) {
            eoh.enter(node);
          },
          leave(node) {
            eoh.leave(node);
          }
        },
        InlineComponent: {
          enter(node) {
            if (hasComponents) {
              return;
            }
            eoh.enter(node);
            if (node.attributes && node.attributes.some(({name}) => name == null ? void 0 : name.startsWith("client:"))) {
              hasComponents = true;
              return;
            }
            const [_name, kind] = node.name.split(":");
            if (kind) {
              hasComponents = true;
            }
          },
          leave(node) {
            eoh.leave(node);
          }
        },
        Element: {
          enter(node) {
            eoh.enter(node);
          },
          leave(node) {
            eoh.leave(node);
          }
        }
      }
    },
    async finalize() {
      const children = [];
      children.push({
        start: 0,
        end: 0,
        type: "Fragment",
        children: [
          {
            start: 0,
            end: 0,
            type: "Expression",
            codeChunks: ["Astro.css.map(css => (", "))"],
            children: [
              {
                type: "Element",
                name: "link",
                attributes: [
                  {
                    name: "rel",
                    type: "Attribute",
                    value: [
                      {
                        type: "Text",
                        raw: "stylesheet",
                        data: "stylesheet"
                      }
                    ]
                  },
                  {
                    name: "href",
                    type: "Attribute",
                    value: [
                      {
                        start: 0,
                        end: 0,
                        type: "MustacheTag",
                        expression: {
                          start: 0,
                          end: 0,
                          type: "Expression",
                          codeChunks: ["css"],
                          children: []
                        }
                      }
                    ]
                  }
                ],
                start: 0,
                end: 0,
                children: []
              }
            ]
          }
        ]
      });
      if (hasComponents) {
        children.push({
          type: "Element",
          name: "style",
          attributes: [{name: "type", type: "Attribute", value: [{type: "Text", raw: "text/css", data: "text/css"}]}],
          start: 0,
          end: 0,
          children: [
            {
              start: 0,
              end: 0,
              type: "Text",
              data: "astro-root, astro-fragment { display: contents; }",
              raw: "astro-root, astro-fragment { display: contents; }"
            }
          ]
        });
      }
      if (isHmrEnabled) {
        const {hmrPort} = opts.compileOptions;
        children.push({
          type: "Element",
          name: "script",
          attributes: [],
          children: [{type: "Text", data: `window.HMR_WEBSOCKET_PORT = ${hmrPort};`, start: 0, end: 0}],
          start: 0,
          end: 0
        }, {
          type: "Element",
          name: "script",
          attributes: [
            {type: "Attribute", name: "type", value: [{type: "Text", data: "module", start: 0, end: 0}], start: 0, end: 0},
            {type: "Attribute", name: "src", value: [{type: "Text", data: "/_snowpack/hmr-client.js", start: 0, end: 0}], start: 0, end: 0}
          ],
          children: [],
          start: 0,
          end: 0
        });
      }
      const conditionalNode = {
        start: 0,
        end: 0,
        type: "Expression",
        codeChunks: ["Astro.isPage ? (", ") : null"],
        children: [
          {
            start: 0,
            end: 0,
            type: "Fragment",
            children
          }
        ]
      };
      eoh.append(conditionalNode);
    }
  };
}
export {
  head_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2NvbXBpbGVyL3RyYW5zZm9ybS9oZWFkLnRzIl0sCiAgIm1hcHBpbmdzIjogIkFBRUE7QUFHZSxzQkFBVSxNQUFxQztBQUM1RCxNQUFJLGdCQUFnQjtBQUNwQixNQUFJLGVBQWUsT0FBTyxLQUFLLGVBQWUsWUFBWSxlQUFlLEtBQUssZUFBZSxTQUFTO0FBQ3RHLFFBQU0sTUFBTSxJQUFJO0FBRWhCLFNBQU87QUFBQSxJQUNMLFVBQVU7QUFBQSxNQUNSLE1BQU07QUFBQSxRQUNKLFVBQVU7QUFBQSxVQUNSLE1BQU0sTUFBTTtBQUNWLGdCQUFJLE1BQU07QUFBQTtBQUFBLFVBRVosTUFBTSxNQUFNO0FBQ1YsZ0JBQUksTUFBTTtBQUFBO0FBQUE7QUFBQSxRQUdkLGlCQUFpQjtBQUFBLFVBQ2YsTUFBTSxNQUFNO0FBQ1YsZ0JBQUksZUFBZTtBQUNqQjtBQUFBO0FBR0YsZ0JBQUksTUFBTTtBQUNWLGdCQUFJLEtBQUssY0FBYyxLQUFLLFdBQVcsS0FBSyxDQUFDLENBQUUsVUFBZ0IsNkJBQU0sV0FBVyxhQUFhO0FBQzNGLDhCQUFnQjtBQUNoQjtBQUFBO0FBSUYsa0JBQU0sQ0FBQyxPQUFPLFFBQVEsS0FBSyxLQUFLLE1BQU07QUFDdEMsZ0JBQUksTUFBTTtBQUNSLDhCQUFnQjtBQUFBO0FBQUE7QUFBQSxVQUdwQixNQUFNLE1BQU07QUFDVixnQkFBSSxNQUFNO0FBQUE7QUFBQTtBQUFBLFFBR2QsU0FBUztBQUFBLFVBQ1AsTUFBTSxNQUFNO0FBQ1YsZ0JBQUksTUFBTTtBQUFBO0FBQUEsVUFFWixNQUFNLE1BQU07QUFDVixnQkFBSSxNQUFNO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQUtaLFdBQVc7QUFDZixZQUFNLFdBQVc7QUFZakIsZUFBUyxLQUFLO0FBQUEsUUFDWixPQUFPO0FBQUEsUUFDUCxLQUFLO0FBQUEsUUFDTCxNQUFNO0FBQUEsUUFDTixVQUFVO0FBQUEsVUFDUjtBQUFBLFlBQ0UsT0FBTztBQUFBLFlB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
