const CSS_SEPARATORS = new Set([" ", ",", "+", ">", "~"]);
const KEYFRAME_PERCENT = /\d+\.?\d*%/;
const NEVER_SCOPED_TAGS = new Set(["base", "body", "font", "frame", "frameset", "head", "html", "link", "meta", "noframes", "noscript", "script", "style", "title"]);
function scopeRule(selector, className) {
  if (selector === "from" || selector === "to" || KEYFRAME_PERCENT.test(selector)) {
    return selector;
  }
  const c = className.replace(/^\.?/, ".");
  const selectors = [];
  let ss = selector;
  {
    let start = 0;
    let lastValue = "";
    let parensOpen = false;
    for (let n = 0; n < ss.length; n++) {
      const isEnd = n === selector.length - 1;
      if (selector[n] === "(")
        parensOpen = true;
      if (selector[n] === ")")
        parensOpen = false;
      if (isEnd || parensOpen === false && CSS_SEPARATORS.has(selector[n])) {
        lastValue = selector.substring(start, isEnd ? void 0 : n);
        if (!lastValue)
          continue;
        selectors.push({start, end: isEnd ? n + 1 : n, value: lastValue});
        start = n + 1;
      }
    }
  }
  for (let i = selectors.length - 1; i >= 0; i--) {
    const {start, end, value} = selectors[i];
    const head = ss.substring(0, start);
    const tail = ss.substring(end);
    if (value === "*") {
      ss = head + c + tail;
      continue;
    }
    if (value.startsWith(":global(")) {
      ss = head + ss.substring(start, end).replace(/^:global\(/, "").replace(/\)$/, "") + tail;
      continue;
    }
    if (CSS_SEPARATORS.has(value) || NEVER_SCOPED_TAGS.has(value)) {
      ss = head + value + tail;
      continue;
    }
    let newSelector = value;
    const pseudoIndex = newSelector.search(/(?<!\\):/);
    if (pseudoIndex > 0) {
      ss = head + newSelector.substring(0, pseudoIndex) + c + newSelector.substr(pseudoIndex) + tail;
    } else {
      ss = head + newSelector + c + tail;
    }
  }
  return ss;
}
function astroScopedStyles(options) {
  const rulesScopedCache = new WeakSet();
  return {
    postcssPlugin: "@astrojs/postcss-scoped-styles",
    Rule(rule) {
      if (!rulesScopedCache.has(rule)) {
        rule.selector = scopeRule(rule.selector, options.className);
        rulesScopedCache.add(rule);
      }
    }
  };
}
export {
  NEVER_SCOPED_TAGS,
  astroScopedStyles as default,
  scopeRule
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vc3JjL2NvbXBpbGVyL3RyYW5zZm9ybS9wb3N0Y3NzLXNjb3BlZC1zdHlsZXMvaW5kZXgudHMiXSwKICAibWFwcGluZ3MiOiAiQUFZQSxNQUFNLGlCQUFpQixJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLO0FBQ3BELE1BQU0sbUJBQW1CO0FBR2xCLE1BQU0sb0JBQW9CLElBQUksSUFBWSxDQUFDLFFBQVEsUUFBUSxRQUFRLFNBQVMsWUFBWSxRQUFRLFFBQVEsUUFBUSxRQUFRLFlBQVksWUFBWSxVQUFVLFNBQVM7QUFPbkssbUJBQW1CLFVBQWtCLFdBQW1CO0FBRTdELE1BQUksYUFBYSxVQUFVLGFBQWEsUUFBUSxpQkFBaUIsS0FBSyxXQUFXO0FBQy9FLFdBQU87QUFBQTtBQUlULFFBQU0sSUFBSSxVQUFVLFFBQVEsUUFBUTtBQUNwQyxRQUFNLFlBQXdCO0FBQzlCLE1BQUksS0FBSztBQUdUO0FBQ0UsUUFBSSxRQUFRO0FBQ1osUUFBSSxZQUFZO0FBQ2hCLFFBQUksYUFBYTtBQUNqQixhQUFTLElBQUksR0FBRyxJQUFJLEdBQUcsUUFBUSxLQUFLO0FBQ2xDLFlBQU0sUUFBUSxNQUFNLFNBQVMsU0FBUztBQUN0QyxVQUFJLFNBQVMsT0FBTztBQUFLLHFCQUFhO0FBQ3RDLFVBQUksU0FBUyxPQUFPO0FBQUsscUJBQWE7QUFDdEMsVUFBSSxTQUFVLGVBQWUsU0FBUyxlQUFlLElBQUksU0FBUyxLQUFNO0FBQ3RFLG9CQUFZLFNBQVMsVUFBVSxPQUFPLFFBQVEsU0FBWTtBQUMxRCxZQUFJLENBQUM7QUFBVztBQUNoQixrQkFBVSxLQUFLLENBQUUsT0FBTyxLQUFLLFFBQVEsSUFBSSxJQUFJLEdBQUcsT0FBTztBQUN2RCxnQkFBUSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBTWxCLFdBQVMsSUFBSSxVQUFVLFNBQVMsR0FBRyxLQUFLLEdBQUcsS0FBSztBQUM5QyxVQUFNLENBQUUsT0FBTyxLQUFLLFNBQVUsVUFBVTtBQUN4QyxVQUFNLE9BQU8sR0FBRyxVQUFVLEdBQUc7QUFDN0IsVUFBTSxPQUFPLEdBQUcsVUFBVTtBQUcxQixRQUFJLFVBQVUsS0FBSztBQUNqQixXQUFLLE9BQU8sSUFBSTtBQUNoQjtBQUFBO0FBSUYsUUFBSSxNQUFNLFdBQVcsYUFBYTtBQUNoQyxXQUNFLE9BQ0EsR0FDRyxVQUFVLE9BQU8sS0FDakIsUUFBUSxjQUFjLElBQ3RCLFFBQVEsT0FBTyxNQUNsQjtBQUNGO0FBQUE7QUFJRixRQUFJLGVBQWUsSUFBSSxVQUFVLGtCQUFrQixJQUFJLFFBQVE7QUFDN0QsV0FBSyxPQUFPLFFBQVE7QUFDcEI7QUFBQTtBQUlGLFFBQUksY0FBYztBQUNsQixVQUFNLGNBQWMsWUFBWSxPQUFPO0FBQ3ZDLFFBQUksY0FBYyxHQUFHO0FBRW5CLFdBQUssT0FBTyxZQUFZLFVBQVUsR0FBRyxlQUFlLElBQUksWUFBWSxPQUFPLGVBQWU7QUFBQSxXQUNyRjtBQUNMLFdBQUssT0FBTyxjQUFjLElBQUk7QUFBQTtBQUFBO0FBSWxDLFNBQU87QUFBQTtBQUlNLDJCQUEyQixTQUFxQztBQUM3RSxRQUFNLG1CQUFtQixJQUFJO0FBQzdCLFNBQU87QUFBQSxJQUNMLGVBQWU7QUFBQSxJQUNmLEtBQUssTUFBTTtBQUNULFVBQUksQ0FBQyxpQkFBaUIsSUFBSSxPQUFPO0FBQy9CLGFBQUssV0FBVyxVQUFVLEtBQUssVUFBVSxRQUFRO0FBQ2pELHlCQUFpQixJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==
